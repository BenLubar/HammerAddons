@NpcClass base(BaseNPC, ASWInhabitableNPC) 
	appliesto(EP1, EP2, HL2, P1, ASRD) 
	autovis(Entities, NPCs, Antlions, Regular Antlion)
	studio("models/antlion.mdl") 
	sphere()
= npc_antlion: "Antlions will run away from ai_sound, type: Thumper."
	[

	spawnflags(flags) : "spawnflags" =
		[
		65536: "Burrow when eluded" : 0
		131072: "Use Ground Checks" : 0
		262144: "Worker Type" : 0 [since_EP2]
		]

	radius(integer) : "Alert Radius" : 256
	eludedist(integer) : "Distance until eluded" : 1024 : "Only available when Burrow When Eluded is flagged"
	ignorebugbait(boolean) : "Ignore Bugbait" : 0
	unburroweffects(boolean) : "Suppress unburrow effects" : 0
	startburrowed(boolean) : "Start Burrowed" : 0
	
	model(studio) : "Override Model"
	noglow[engine](boolean) : "Disable Glowing Butt" : 0
	noglow(choices) : "Glowing Butt" : 0 =
		[
		0 : "Glow"
		1 : "Don't glow"
		]

	// Inputs
	input Unburrow(void) : "Unburrow from the ground"
	input Burrow(void) : "Burrow into the ground"
	input BurrowAway(void) : "Burrow into the ground and then remove the antlion."
	input FightToPosition(target_destination) : "Fight to position"
	input StopFightToPosition(string) : "Stop fighting to reach a position, if it currently is. The parameter is ignored."
	input JumpAtTarget(target_destination) : "Jump at/through this target."
	input EnableJump(void) : "Allow non-navigational jumping"
	input DisableJump(void) : "Disallow non-navigational jumping"
	input IgnoreBugbait(void) : "Ignore bugbait"
	input HearBugbait(void) : "Hear bugbait"
	input SetFollowTarget(string) : "Make the Antlion follow the given entity."

	// Outputs
	output OnReachedFightGoal(void) : "Fires when the antlion reaches their specified fight-to location"
	output OnUnBurrowed(void) : "Fires when the antlion unburrows"

	@resources
		[
		sound "NPC_Antlion.RunOverByVehicle"
		sound "NPC_Antlion.MeleeAttack"
		sound "NPC_Antlion.Footstep"
		sound "NPC_Antlion.BurrowIn"
		sound "NPC_Antlion.BurrowOut"
		sound "NPC_Antlion.FootstepSoft"
		sound "NPC_Antlion.FootstepHeavy"
		sound "NPC_Antlion.MeleeAttackSingle"
		sound "NPC_Antlion.MeleeAttackDouble"
		sound "NPC_Antlion.Distracted"
		sound "NPC_Antlion.Idle"
		sound "NPC_Antlion.Pain"
		sound "NPC_Antlion.Land"
		sound "NPC_Antlion.WingsOpen"
		sound "NPC_Antlion.LoopingAgitated"
		sound "NPC_Antlion.Distracted"

		sound "NPC_Antlion.MeleeAttack_Muffled" [+episodic]
		sound "NPC_Antlion.TrappedMetal" [+episodic]
		sound "NPC_Antlion.ZappedFlip" [+episodic]
		// This determines whether to include worker or regular resources, plus handles EZ2 variants
		func npc_antlion
		]
	]
